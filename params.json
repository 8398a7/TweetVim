{"name":"Tweetvim","body":"\r\nTweetVim\r\n========\r\n\r\ntwitter client for vim\r\n\r\nLicense\r\n-------\r\n\r\nMIT License\r\n\r\nRequires\r\n--------\r\n\r\n- [webapi-vim](https://github.com/mattn/webapi-vim)\r\n- [open-browser.vim](https://github.com/tyru/open-browser.vim)\r\n- [twibill.vim](https://github.com/basyura/twibill.vim)\r\n- [(unite-outline)](https://github.com/h1mesuke/unite-outline)\r\n- [(bitly.vim)](https://github.com/basyura/bitly.vim)\r\n- [(unite.vim)](https://github.com/Shougo/unite.vim)\r\n- [cURL](http://curl.haxx.se/)\r\n\r\nverify\r\n------\r\n\r\n認証されていない場合は、コマンド実行時にブラウザを起動して PIN を表示する。\r\n\r\n    :TweetVimHomeTimeline\r\n\t  \r\n    > now launched your browser to authenticate\r\n    > Enter Twitter OAuth PIN:\r\n\r\nPIN を入力すると認証完了。  \r\n認証時に発行された AccessToken と AccessTokenSecret が以下に保存される。\r\n\r\n    ~/.tweetvim/token\r\n\r\n~/.tweetvim がファイルとして保存されている場合は削除してから上記を行うこと。\r\n\r\ncommands\r\n---------------\r\n\r\n### ホームタイムラインを表示する。\r\n\r\n    :TweetVimHomeTimeline\r\n\r\n### Mention を表示する\r\n\r\n    :TwetVimMentions\r\n\r\n### リストを表示する\r\n\r\n    :TweetVimListStatuses vim\r\n\r\n### ユーザのタイムラインを表示する\r\n\r\n    :TweetVimUserTimeline basyura\r\n\r\n### ツイート用バッファを開く\r\n\r\n    :TweetVimSay\r\n\r\nメッセージ入力後、ノーマルモードの Enter でツイート。\r\n\r\n### コマンドラインからツイート\r\n\r\n引数が有る場合はそれをメッセージとして、無い場合はプロンプトを表示。\r\n\r\n    :TweetVimCommandSay\r\n    or\r\n    :TweetVimCommandSay メッセージ\r\n\r\n### カレント行をツイート\r\n\r\n    :TweetVimCurrentLineSay\r\n\r\n### 検索\r\n\r\n    :TweetVimSearch tweetvim\r\n\r\n定義済みバッファキーマップ\r\n--------------------------\r\n\r\n### タイムライン表示バッファ(tweetvim)\r\n\r\n    nmap <silent> <buffer> <CR> <Plug>(tweetvim_action_enter)\r\n    nmap <silent> <buffer> r  <Plug>(tweetvim_action_reply)\r\n    nmap <silent> <buffer> i  <Plug>(tweetvim_action_in_reply_to)\r\n    nmap <silent> <buffer> u  <Plug>(tweetvim_action_user_timeline)\r\n    nmap <silent> <buffer> o  <Plug>(tweetvim_action_open_links)\r\n    nmap <silent> <buffer> q  <Plug>(tweetvim_action_search)\r\n    nmap <silent> <buffer> <leader>f  <Plug>(tweetvim_action_favorite)\r\n    nmap <silent> <buffer> <leader>uf <Plug>(tweetvim_action_remove_favorite)\r\n    nmap <silent> <buffer> <leader>r  <Plug>(tweetvim_action_retweet)\r\n    nmap <silent> <buffer> <leader>q  <Plug>(tweetvim_action_qt)\r\n    nmap <silent> <buffer> <Leader><Leader>  <Plug>(tweetvim_action_reload)\r\n\r\n    nmap <silent> <buffer> ff  <Plug>(tweetvim_action_page_next)\r\n    nmap <silent> <buffer> bb  <Plug>(tweetvim_action_page_previous)\r\n\r\n    nmap <silent> <buffer> H  <Plug>(tweetvim_buffer_previous)\r\n    nmap <silent> <buffer> L  <Plug>(tweetvim_buffer_next)\r\n\r\n    nnoremap <silent> <buffer> a :call unite#sources#tweetvim_action#start()<CR>\r\n    nnoremap <silent> <buffer> t :call unite#sources#tweetvim_timeline#start()<CR>\r\n\r\nデフォルトでは、`<leader>` は \\ が設定されている\r\n\r\n### ツイート用バッファ(tweetvim_say)\r\n\r\n    nnoremap <buffer> <silent> q :bd!<CR>\r\n    nnoremap <buffer> <silent> <C-s>      :call <SID>show_history()<CR>\r\n    inoremap <buffer> <silent> <C-s> <ESC>:call <SID>show_history()<CR>\r\n    nnoremap <buffer> <silent> <CR>       :call <SID>post_tweet()<CR>\r\n\r\n    inoremap <buffer> <silent> <C-i> <ESC>:call unite#sources#tweetvim_tweet_history#start()<CR>\r\n    nnoremap <buffer> <silent> <C-i> <ESC>:call unite#sources#tweetvim_tweet_history#start()<CR>\r\n\r\nUnite インタフェース\r\n--------------------\r\n\r\n### タイムライン選択\r\n\r\n    :Unite tweetvim\r\n\r\n- home_timeline\r\n- mentions\r\n- retweeted_by_me\r\n- retweeted_to_me\r\n- retweets_of_me\r\n- favorites\r\n- @basyura/登録してあるリスト\r\n- @basyura/登録してあるリスト\r\n- ・・・\r\n\r\napi を使ってスクリーン名とリスト一覧を取得するので、最初の一回はちょっと遅い。\r\n\r\n\r\n### アクション選択\r\n\r\ntweetvim バッファのみ。  \r\nデフォルトでは a でアクション選択用の Unite が起動する。\r\n\r\n- browser         - open tweet with browser\r\n- favorite        - favorite tweet\r\n- follow          - follow user\r\n- in_reply_to     - show conversation\r\n- list            - add user to list\r\n- open_links      - open links in tweet\r\n- qt              - quote tweet\r\n- remove_favorite - remove favorite\r\n- reply           - reply\r\n- retweet         - retweet\r\n- search          - search tweets\r\n- unfollow        - unfollow user\r\n- user_timeline   - show user timeline\r\n- remove_status   - remove status\r\n\r\n### ツイート歴表示、選択\r\n\r\ntweetvim_say バッファのみ。  \r\nデフォルトでは `<C-i>` で歴選択用の Unite が起動する。  \r\n歴は tweetvim_say バッファが閉じられるタイミングでキャッシュされる。  \r\n\r\n`<C-s>` で歴を遡って tweetvim_say バッファに表示させることも可\r\n\r\n### outline\r\n\r\nタイムラインの絞り込み\r\n\r\n    :Unite outline\r\n\r\nurl 短縮\r\n--------\r\n\r\n[bitly.vim](https://github.com/basyura/bitly.vim) をインストールしておくと、ツイート用バッファで URL 短縮とタイトルの取得ができる。  \r\nデフォルトのキーマッピング。\r\n\r\n    inoremap <buffer> <C-x><C-d> <ESC>:TweetVimBitly<CR>\r\n\r\n実行すると以下の内容がツイート用バッファに展開される\r\n\r\n    > basyura/TweetVim - GitHub http://bit.ly/t0RQhx\r\n\r\nその他\r\n------\r\n\r\nタイムラインに表示したスクリーン名のキャッシュ\r\n\r\n    ~/.tweetvim/screen_name\r\n\r\n使い方\r\n------\r\n\r\n### 設定例\r\n\r\n    \" タイムライン選択用の Unite を起動する\r\n    nnoremap <silent> t :Unite tweetvim<CR>\r\n    \" 発言用バッファを表示する\r\n    nnoremap <silent> s           :<C-u>TweetVimSay<CR>\r\n    \" mentions を表示する\r\n    nnoremap <silent> <Space>re   :<C-u>TweetVimMentions<CR>\r\n    \" 特定のリストのタイムラインを表示する\r\n    nnoremap <silent> <Space>tt   :<C-u>TweetVimListStatuses basyura vim<CR>\r\n\r\n    \" スクリーン名のキャッシュを利用して、neocomplcache で補完する\r\n    if !exists('g:neocomplcache_dictionary_filetype_lists')\r\n      let g:neocomplcache_dictionary_filetype_lists = {}\r\n    endif\r\n    let neco_dic = g:neocomplcache_dictionary_filetype_lists\r\n    let neco_dic.tweetvim_say = $HOME . '/.tweetvim/screen_name'\r\n\r\n### 使用例\r\n\r\n- Unite を起動してタイムラインの一覧を表示する => `t`\r\n- タイムラインを選択して表示する\r\n- 最新の内容に更新する => `<leader><leader>`\r\n- リプライする => `r`\r\n- リプライの内容を書きこんで送信する => normal モードで `enter`\r\n- タイムラインの次ページを表示する => `ff`\r\n- タイムラインの前ページを表示する => `bb`\r\n- さっき表示したバッファに戻る => `H`\r\n- やっぱり元のバッファに戻る(進む) => `L`\r\n- 新しく発言する => `s`\r\n- 過去に発言した内容をたどる => `C-s`\r\n- Unite で過去に発言した内容の一覧を表示する => `C-i`\r\n- 発言する => normal モードで `enter`\r\n- 検索してー => `:TweetVimSearch vim`\r\n- このユーザの発言だけ見たい => `u`\r\n- ツイートのやり取りを見たい => `i`\r\n- ふぁぼりたい => `<leader>f`\r\n- ふぁぼ消したい => `<leader>uf`\r\n- リツイートしたい => `<leader>r`\r\n- qt したい => `<leader>q`\r\n- ツイートにあるリンクを全部開きたい => `o`\r\n- Unite で rt とか fav とかしたい => `a`\r\n\r\nproxy\r\n-----\r\n\r\n会社等から使用したい場合は、以下のプロキシ設定が必要です。\r\n環境変数に設定していない場合は、vimrc に記述してください。\r\n\r\n    let $http_proxy   = 'http://xxx.xx.xx:8080'\r\n    let $HTTPS_PROXY  = 'http://xxx.xx.xx:8080'\r\n\r\nタイムラインの表示が遅いと感じる場合\r\n------------------------------------\r\n\r\nwebapi-vim を fork して hmac#sha1 の ruby, perl, python 実装を追加した資源が\r\n[webapi-vim](https://github.com/basyura/webapi-vim) にあります(pull request 中)。  \r\nこの資源を clone するか各自のリポジトリに[差分](https://github.com/mattn/webapi-vim/pull/1/files)を当てるといい感じになるかもしれません。\r\n\r\nvariables\r\n---------\r\n\r\n1 ページあたりのツイート取得件数\r\n\r\n    let g:tweetvim_tweet_per_page = 50\r\n\r\n表示内容をキャッシュしておく数(バッファを戻る、進むに使用)\r\n\r\n    let g:tweetvim_cache_size     = 10\r\n\r\n設定情報を保存するディレクトリ\r\n\r\n    let g:tweetvim_config_dir     = expand('~/.tweetvim')\r\n\r\nタイムラインにリツイートを含める\r\n\r\n    let g:tweetvim_include_rts    = 1\r\n\r\nsource(クライアント名) を表示するオプション\r\n\r\n    let g:tweetvim_display_source = 1\r\n\r\nツイート時間の表示・非表示設定 (少しでも表示時間を速くしたい場合)\r\n\r\n    let g:tweetvim_display_time   = 1\r\n\r\nタイムラインを開く際のコマンドを指定 (edit/split/vsplit)\r\n\r\n    let g:tweetvim_open_buffer_cmd = 'edit!'\r\n\r\n","tagline":"twitter client for vim","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}